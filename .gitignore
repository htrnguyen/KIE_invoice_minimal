# Large model weights and checkpoints
weights/
!weights/README.md
!scripts/download_weights.py
weights/kie/models--microsoft--layoutxlm-base/snapshots/

# Dataset images and labels
data/images/
data/dataset/
data/labels/
!data/README.md
!data/mcocr_labels.json
!data/labels.txt
!data/labeling_guide.txt

# Keep important configuration files
!configs/
!scripts/

# Compressed files
*.zip
*.tar
*.gz
*.rar

# Model files
*.bin
*.pth
*.onnx
*.tflite

# Results and logs
results/
logs/
*.log
training.log
evaluation_report.txt
error_analysis.json

# Cache and temp
__pycache__/
*.pyc
.ipynb_checkpoints/
tmp/

# IDE
.vscode/
.idea/
*.sublime-workspace
*.sublime-project

# Environment
venv/
env/
.env

# Temporary and cache files
tmp/
*.pyc
__pycache__/
.ipynb_checkpoints/
*.swp
*.swo

# IDE
.vscode/
.idea/
*.sublime-workspace
*.sublime-project

# Logs and databases
*.log
*.sqlite3
training.log
evaluation_report.txt
error_analysis.json

# Distribution / packaging
dist/
build/
*.egg-info/

# Unit test / coverage reports
htmlcov/
.coverage
.coverage.*
coverage.xml
*.cover

# Byte-compiled / optimized / DLL files
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
develop-eggs/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
.tox/
.nox/
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot
*.bin

# Django stuff:
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/
